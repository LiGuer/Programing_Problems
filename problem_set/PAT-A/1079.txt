#include<iostream>
using namespace std;
#include<stdio.h>
#include<vector>
#include<algorithm>
#include<cmath>
struct node
{
    double w=0;
    vector<int> child;
}tree[100005];
double ans=0,P,r;
void DFS(int id,int deep)
{
    if(tree[id].w!=0){
        ans+=tree[id].w*pow(1+r/100,deep);
        return;
    }
    for(int i=0;i<tree[id].child.size();i++){
        DFS(tree[id].child[i],deep+1);
    }
    return;
}
int main()
{
    int N;
    scanf("%d %lf %lf",&N,&P,&r);
    for(int i=0;i<N;i++){
        int K;
        scanf("%d",&K);
        if(K==0){
            scanf("%lf",&tree[i].w);
        }
        tree[i].child.resize(K);
        for(int j=0;j<K;j++){
            scanf("%d",&tree[i].child[j]);
        }
    }
    DFS(0,0);
    printf("%.1f",ans*P);
return 0;
}
