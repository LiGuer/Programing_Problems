#include<iostream>
using namespace std;
#include<stdio.h>
#include<cmath>
#include<vector>
vector<int> tree[100005];
int ans=99999999,ansn,book[100005]={0};
void DFS(int id,int deep)
{
    if(book[id]!=0&&deep<ans){ans=deep;ansn=1;}
    else if(book[id]!=0&&deep==ans)ansn++;
    for(int i=0;i<tree[id].size();i++){
        DFS(tree[id][i],deep+1);
    }

}
int main()
{
    int N;double P,r;
    scanf("%d %lf %lf",&N,&P,&r);
    r/=100;
    for(int i=0;i<N;i++){
        int K;
        scanf("%d",&K);
        if(K==0){book[i]++;continue;}
        tree[i].resize(K);
        for(int j=0;j<K;j++){
            scanf("%d",&tree[i][j]);
        }
    }
    DFS(0,0);
    printf("%.4f %d",P*pow(1+r,ans),ansn);
    return 0;
}
