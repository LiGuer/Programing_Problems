#include<iostream>
#include<algorithm>
using namespace std;
#define MAXN 10000

struct node
{
    int id,best;
    int score[4],rank[4];
}stu[MAXN];
int flag=-1;
bool cmp(node a,node b)
{
    return a.score[flag]>b.score[flag];
}

int main()
{
    int N,M;
    cin>>N>>M;
    for(int i=0;i<N;i++)
    {
        cin>>stu[i].id>>stu[i].score[1]>>stu[i].score[2]>>stu[i].score[3];
        stu[i].score[0]=(stu[i].score[1]+stu[i].score[2]+stu[i].score[3])/3.0+0.5;
    }
    for(flag=0;flag<4;flag++)
    {
        sort(stu,stu+N,cmp);
        for(int i=0;i<N;i++){
            stu[i].rank[flag]=i+1;
            if(i>0&&stu[i].score[flag]==stu[i-1].score[flag])stu[i].rank[flag]=stu[i-1].rank[flag];
        }
    }
    for(int i=0;i<N;i++){
        int minn=stu[i].rank[0];
        stu[i].best=0;
        for(int j=1;j<4;j++){
            if(stu[i].rank[j]<minn){minn=stu[i].rank[j],stu[i].best=j;}
        }
    }
    char dict[4]={'A','C','M','E'};
    for(int i=0;i<M;i++){
        int idtemp;
        cin>>idtemp;
        int o=0;
        for(int j=0;j<N;j++){
            if(stu[j].id==idtemp){cout<<stu[j].rank[stu[j].best]<<' '<<dict[stu[j].best]<<endl;o=1;break;}
        }
        if(!o)cout<<"N/A"<<endl;
    }

}
