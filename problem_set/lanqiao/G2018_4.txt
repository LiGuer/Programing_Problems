4：约瑟夫环
n 个人的编号是 1~n，如果他们依编号按顺时针排成一个圆圈，从编号是1的人开始顺时针报数。
（报数是从1报起）当报到 k 的时候，这个人就退出游戏圈。下一个人重新从1开始报数。
求最后剩下的人的编号。这就是著名的约瑟夫环问题。
本题目就是已知 n，k 的情况下，求最后剩下的人的编号。
题目的输入是一行，2个空格分开的整数n, k
要求输出一个整数，表示最后剩下的人的编号。
约定：0 < n,k < 1百万
例如输入：
10 3
程序应该输出：
4
====================================================
约瑟夫环问题：公式 f(n, k) = [ f(n - 1, k) + k] % n
证明：
1). n=1时，f(1, k)=0
2). 对n:
离队的是s = ( k - 1) % n
0  1  2  3  4  5  ...  s-1  s  s+1  ...  n-1     --[n]
...  ...      ...        ...  n-2  x   0     1 ...  ...     --[n-1]
3). 对n-1:    如上图，
报数从n的s+1开始，即[n]的s+1就是[n-1]的0。
对[n-1]，设答案编号f(n - 1, k)。
即[n]中的编号：[ f(n - 1, k) + (s+1) ] % n

∴可得公式结果：[ f(n - 1, k) + (k % n) ] % n

Ps.当无法得到其解析式时，可以考虑得到其递归公式。
---------------------------------------------------------------------------------------
#include <iostream>
using namespace std;
int Josephus(int n, int k) { return n == 1 ? 0 : (Josephus(n - 1, k) + k) % n; }
int main()
{
	int n, k;
	cin >> n >> k;
	int ans = Josephus(n, k);
	printf("%d\n", ans+1);
}